---
# handlers file for tomcat

- name: creating opt tomcat directory
  file:
    path: "/opt/tomcat"
    state: directory
    mode: 0755

- name: unarchive tomcat
  unarchive:
    src: "/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz"
    dest: "/tmp"
    remote_src: yes

- name: copy tomcat
  command: "mv /tmp/apache-tomcat-{{ tomcat_version }} /opt/tomcat/{{ tomcat_version }}"

- name: changin opt tomcat directory owner and group
  file:
    path: "/opt/tomcat/{{ tomcat_version }}"
    state: touch
    owner: '{{ user_name }}'
    group: '{{ group_name }}'
    mode: 0755

- name: add tomcat conf
  shell: |
      echo '
      description "Tomcat Server"

      start on runlevel [2345]
      stop on runlevel [!2345]
      respawn
      respawn limit 10 5

      setuid {{ user_name }}
      setgid {{ group_name }}

      env JAVA_HOME=/usr/lib/jvm/java-{{ java_version }}-oracle/jre
      env CATALINA_HOME=/opt/tomcat/{{ tomcat_version }}

      # Modify these options as needed
      env JAVA_OPTS="-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom"
      env CATALINA_OPTS="-Xms512M -Xmx1024M -server -XX:+UseParallelGC"

      exec $CATALINA_HOME/bin/catalina.sh run
      # startup.sh

      # cleanup temp directory after stop
      post-stop script
         rm -rf $CATALINA_HOME/temp/*
      end script' > /etc/init/tomcat.conf
  args:
    executable: /bin/bash

- name: reload configuration
  shell:
      initctl reload-configuration
  args:
    executable: /bin/bash

- name: start tomcat as service
  command: "/opt/tomcat/{{ tomcat_version }}/bin/startup.sh"
#  service:
#    name: tomcat
#    state: restarted

- name: wait for tomcat to start
  wait_for: port={{http_port}}
